<ul>
    {% set searchResultsFiltered = cars.currentPageResults %}
    <strong>
        nazwa: {{ content.name }}
    </strong>
    <p>
        adres: {{ ibexa_render_field(content, 'address') }}
    </p>
    <div>
        {{ ibexa_render_field(content, 'dealership_location', {'parameters': {'width': '30%', 'height': '200px', 'showMap': true, 'showInfo': false }}) }}
    </div>
    oferta
    <div class="search-bar">
        <label for="search">Search:</label>
        <input type="text" id="search" class="search-input" placeholder="Search by brand, model, year, or price">
        <button class="sortButton" data-sort-by="car_brand">Sort by Brand</button>
        <button class="sortButton" data-sort-by="model">Sort by model</button>
        <button class="sortButton" data-sort-by="year">Sort by year</button>
        <button class="sortButton" data-sort-by="price">Sort by price</button>
    </div>
    <div class="car_list">
        {% for car in searchResultsFiltered %}
            <div class="car-row">
                <strong>marka:</strong>
                <div class="car_brand">{{ ibexa_render_field(car.valueObject.content, 'car_brand') }}</div>
                <strong>model:</strong>
                <div class="model">{{ ibexa_render_field(car.valueObject.content, 'model') }}</div>
                <strong>rok:</strong>
                <div class="year">{{ ibexa_render_field(car.valueObject.content, 'year') }}</div>
                <strong>cena:</strong>
                <div class="price">{{ ibexa_render_field(car.valueObject.content, 'price') }}</div>
                <hr/>
            </div>
        {% endfor %}
    </div>
</ul>


<script>
    let sortDirection = {
        brand: true,   // true means ascending, false means descending
        model: true,
        year: true,
        price: true
    };
    document.querySelectorAll('.sortButton').forEach(button => {
        button.addEventListener('click', function() {
        const carRows = Array.from(document.querySelectorAll('.car-row'));
        const sortBy = this.getAttribute('data-sort-by');
        const isAscending = sortDirection[sortBy];
            carRows.sort((a, b) => {
                let atrA = a.querySelector('.'+sortBy).textContent.toLowerCase();
                let atrB = b.querySelector('.'+sortBy).textContent.toLowerCase();
                if(sortBy === 'price'){
                    atrA = Number(atrA);
                    atrB = Number(atrB);
                }
                if (atrA < atrB) return  isAscending ? -1 : 1;
                if (atrA > atrB) return  isAscending ? 1 : -1;
                else return 0;
            });
            carRows.forEach(item => {
                item.parentNode.appendChild(item); // Append each sorted row back to the parent
            });
            sortDirection[sortBy] = !sortDirection[sortBy];
    });
    });


    document.addEventListener('DOMContentLoaded', function () {
        const searchInput = document.getElementById('search');

        searchInput.addEventListener('input', function () {
            filterCars();
        });

        function filterCars() {
            const carRows = document.querySelectorAll('.car-row');

            const searchTerm = searchInput.value.toLowerCase();

            carRows.forEach(row => {
                try {
                    const brand = row.querySelector('.car_brand').textContent.toLowerCase();
                    const model = row.querySelector('.model').textContent.toLowerCase();
                    const year = row.querySelector('.year').textContent.toLowerCase();
                    const price = row.querySelector('.price').textContent.toLowerCase();
                    const matchesSearchTerm = brand.includes(searchTerm) ||
                        model.includes(searchTerm) ||
                        year.includes(searchTerm) ||
                        price.includes(searchTerm)

                    if (matchesSearchTerm) {
                        row.style.display = '';
                    } else {
                        row.style.display = 'none';
                    }
                } catch ($error) {
                    row.style.display = 'none';
                }
            });
        }
    });
</script>